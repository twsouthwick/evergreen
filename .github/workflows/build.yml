name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Initialize
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.ACR_ENDPOINT }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    - name: 'Build and push images'
      run: |
        docker buildx create --use

        docker buildx build --push --target postgres-ils -t ${{ secrets.ACR_ENDPOINT }}/tws-evergreen-pg:${{ github.sha }} .
        docker buildx build --push --target postgres-ils -t ${{ secrets.ACR_ENDPOINT }}/tws-evergreen-pg:latest .

        docker buildx build --push --target db-init -t ${{ secrets.ACR_ENDPOINT }}/tws-evergreen-pg-init:${{ github.sha }} .
        docker buildx build --push --target db-init -t ${{ secrets.ACR_ENDPOINT }}/tws-evergreen-pg-init:latest .

        docker buildx build --push --target osrf-service -t ${{ secrets.ACR_ENDPOINT }}/tws-evergreen-opensrf:${{ github.sha }} .
        docker buildx build --push --target osrf-service -t ${{ secrets.ACR_ENDPOINT }}/tws-evergreen-opensrf:latest .
        
        docker buildx build --push --target opensrf-websocket -t ${{ secrets.ACR_ENDPOINT }}/tws-evergreen-opensrf-ws:${{ github.sha }} .
        docker buildx build --push --target opensrf-websocket -t ${{ secrets.ACR_ENDPOINT }}/tws-evergreen-opensrf-ws:latest .
        
        docker buildx build --push --target router -t ${{ secrets.ACR_ENDPOINT }}/tws-evergreen-router:${{ github.sha }} .
        docker buildx build --push --target router -t ${{ secrets.ACR_ENDPOINT }}/tws-evergreen-router:latest .
        
        docker buildx build --push --target evergreen -t ${{ secrets.ACR_ENDPOINT }}/tws-evergreen-web:${{ github.sha }} .
        docker buildx build --push --target evergreen -t ${{ secrets.ACR_ENDPOINT }}/tws-evergreen-web:latest .
